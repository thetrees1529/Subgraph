// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OfferApproved extends ethereum.Event {
  get params(): OfferApproved__Params {
    return new OfferApproved__Params(this);
  }
}

export class OfferApproved__Params {
  _event: OfferApproved;

  constructor(event: OfferApproved) {
    this._event = event;
  }

  get name1(): string {
    return this._event.parameters[0].value.toString();
  }

  get name2(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class OfferCancelled extends ethereum.Event {
  get params(): OfferCancelled__Params {
    return new OfferCancelled__Params(this);
  }
}

export class OfferCancelled__Params {
  _event: OfferCancelled;

  constructor(event: OfferCancelled) {
    this._event = event;
  }

  get name(): string {
    return this._event.parameters[0].value.toString();
  }
}

export class OfferCreated extends ethereum.Event {
  get params(): OfferCreated__Params {
    return new OfferCreated__Params(this);
  }
}

export class OfferCreated__Params {
  _event: OfferCreated;

  constructor(event: OfferCreated) {
    this._event = event;
  }

  get name(): string {
    return this._event.parameters[0].value.toString();
  }

  get offer(): OfferCreatedOfferStruct {
    return changetype<OfferCreatedOfferStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }
}

export class OfferCreatedOfferStruct extends ethereum.Tuple {
  get void(): boolean {
    return this[0].toBoolean();
  }

  get name(): string {
    return this[1].toString();
  }

  get maker(): Address {
    return this[2].toAddress();
  }

  get sack(): OfferCreatedOfferSackStruct {
    return changetype<OfferCreatedOfferSackStruct>(this[3].toTuple());
  }
}

export class OfferCreatedOfferSackStruct extends ethereum.Tuple {
  get pouches(): Array<OfferCreatedOfferSackPouchesStruct> {
    return this[0].toTupleArray<OfferCreatedOfferSackPouchesStruct>();
  }

  get nfts(): Array<OfferCreatedOfferSackNftsStruct> {
    return this[1].toTupleArray<OfferCreatedOfferSackNftsStruct>();
  }
}

export class OfferCreatedOfferSackPouchesStruct extends ethereum.Tuple {
  get imp(): Address {
    return this[0].toAddress();
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }
}

export class OfferCreatedOfferSackNftsStruct extends ethereum.Tuple {
  get imp(): Address {
    return this[0].toAddress();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }
}

export class OfferRevoked extends ethereum.Event {
  get params(): OfferRevoked__Params {
    return new OfferRevoked__Params(this);
  }
}

export class OfferRevoked__Params {
  _event: OfferRevoked;

  constructor(event: OfferRevoked) {
    this._event = event;
  }

  get name1(): string {
    return this._event.parameters[0].value.toString();
  }

  get name2(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class OffersTraded extends ethereum.Event {
  get params(): OffersTraded__Params {
    return new OffersTraded__Params(this);
  }
}

export class OffersTraded__Params {
  _event: OffersTraded;

  constructor(event: OffersTraded) {
    this._event = event;
  }

  get name1(): string {
    return this._event.parameters[0].value.toString();
  }

  get name2(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  getApprovalStatus(name: string, name2: string): boolean {
    let result = super.call(
      "getApprovalStatus",
      "getApprovalStatus(string,string):(bool)",
      [ethereum.Value.fromString(name), ethereum.Value.fromString(name2)]
    );

    return result[0].toBoolean();
  }

  try_getApprovalStatus(
    name: string,
    name2: string
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getApprovalStatus",
      "getApprovalStatus(string,string):(bool)",
      [ethereum.Value.fromString(name), ethereum.Value.fromString(name2)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getExists(name: string): boolean {
    let result = super.call("getExists", "getExists(string):(bool)", [
      ethereum.Value.fromString(name)
    ]);

    return result[0].toBoolean();
  }

  try_getExists(name: string): ethereum.CallResult<boolean> {
    let result = super.tryCall("getExists", "getExists(string):(bool)", [
      ethereum.Value.fromString(name)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  offerCountOf(addr: Address): BigInt {
    let result = super.call("offerCountOf", "offerCountOf(address):(uint256)", [
      ethereum.Value.fromAddress(addr)
    ]);

    return result[0].toBigInt();
  }

  try_offerCountOf(addr: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "offerCountOf",
      "offerCountOf(address):(uint256)",
      [ethereum.Value.fromAddress(addr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  offersByAddress(param0: Address, param1: BigInt): string {
    let result = super.call(
      "offersByAddress",
      "offersByAddress(address,uint256):(string)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toString();
  }

  try_offersByAddress(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "offersByAddress",
      "offersByAddress(address,uint256):(string)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ApproveTradeCall extends ethereum.Call {
  get inputs(): ApproveTradeCall__Inputs {
    return new ApproveTradeCall__Inputs(this);
  }

  get outputs(): ApproveTradeCall__Outputs {
    return new ApproveTradeCall__Outputs(this);
  }
}

export class ApproveTradeCall__Inputs {
  _call: ApproveTradeCall;

  constructor(call: ApproveTradeCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get name2(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class ApproveTradeCall__Outputs {
  _call: ApproveTradeCall;

  constructor(call: ApproveTradeCall) {
    this._call = call;
  }
}

export class CancelOfferCall extends ethereum.Call {
  get inputs(): CancelOfferCall__Inputs {
    return new CancelOfferCall__Inputs(this);
  }

  get outputs(): CancelOfferCall__Outputs {
    return new CancelOfferCall__Outputs(this);
  }
}

export class CancelOfferCall__Inputs {
  _call: CancelOfferCall;

  constructor(call: CancelOfferCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class CancelOfferCall__Outputs {
  _call: CancelOfferCall;

  constructor(call: CancelOfferCall) {
    this._call = call;
  }
}

export class CreateOfferCall extends ethereum.Call {
  get inputs(): CreateOfferCall__Inputs {
    return new CreateOfferCall__Inputs(this);
  }

  get outputs(): CreateOfferCall__Outputs {
    return new CreateOfferCall__Outputs(this);
  }
}

export class CreateOfferCall__Inputs {
  _call: CreateOfferCall;

  constructor(call: CreateOfferCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get sack(): CreateOfferCallSackStruct {
    return changetype<CreateOfferCallSackStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class CreateOfferCall__Outputs {
  _call: CreateOfferCall;

  constructor(call: CreateOfferCall) {
    this._call = call;
  }
}

export class CreateOfferCallSackStruct extends ethereum.Tuple {
  get pouches(): Array<CreateOfferCallSackPouchesStruct> {
    return this[0].toTupleArray<CreateOfferCallSackPouchesStruct>();
  }

  get nfts(): Array<CreateOfferCallSackNftsStruct> {
    return this[1].toTupleArray<CreateOfferCallSackNftsStruct>();
  }
}

export class CreateOfferCallSackPouchesStruct extends ethereum.Tuple {
  get imp(): Address {
    return this[0].toAddress();
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }
}

export class CreateOfferCallSackNftsStruct extends ethereum.Tuple {
  get imp(): Address {
    return this[0].toAddress();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RevokeTradeCall extends ethereum.Call {
  get inputs(): RevokeTradeCall__Inputs {
    return new RevokeTradeCall__Inputs(this);
  }

  get outputs(): RevokeTradeCall__Outputs {
    return new RevokeTradeCall__Outputs(this);
  }
}

export class RevokeTradeCall__Inputs {
  _call: RevokeTradeCall;

  constructor(call: RevokeTradeCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get name2(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class RevokeTradeCall__Outputs {
  _call: RevokeTradeCall;

  constructor(call: RevokeTradeCall) {
    this._call = call;
  }
}

export class TradeCall extends ethereum.Call {
  get inputs(): TradeCall__Inputs {
    return new TradeCall__Inputs(this);
  }

  get outputs(): TradeCall__Outputs {
    return new TradeCall__Outputs(this);
  }
}

export class TradeCall__Inputs {
  _call: TradeCall;

  constructor(call: TradeCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get name2(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class TradeCall__Outputs {
  _call: TradeCall;

  constructor(call: TradeCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
